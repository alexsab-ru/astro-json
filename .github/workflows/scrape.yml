name: Scrape Data

on:
  schedule:
    - cron: '0 1 * * *'  # Запускается в 1 по Гринвичу
  push:
    paths:
      - '.github/workflows/scrape.yml'
      - '.github/scripts/scrape.js'
  workflow_dispatch:  # Позволяет вручную запускать этот workflow

jobs:
  scrape:
    runs-on: ubuntu-latest

    # Указываете окружение и его переменные
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
          npm install -g pnpm
          pnpm install --no-frozen-lockfile

    - name: Scrape geely-motors.com
      run: node .github/scripts/scrape.js
      env:
        BRAND: "geely"
        URL: "https://www.geely-motors.com"
        ITEM_XPATH: "//a[contains(@class,'v2-menu-curtain-automobiles__item')]"
        ID_XPATH: "concat('geely-', substring(substring-after(./@href, '/model/'), 1 + 6 * starts-with(substring-after(./@href, '/model/'), 'geely-')))"
        MODEL_XPATH: "./div/h4[@class='v2-automobile-menu-card__heading']/text()"
        PRICE_XPATH: "translate(string(./div/p[@class='v2-automobile-menu-card__paragraph']/text()), translate(string(./div/p[@class='v2-automobile-menu-card__paragraph']/text()), '0123456789', ''), '')"
        LINK_XPATH: "./@href"
        OUTPUT_PATHS: "./src/geely-partner-orenburg.ru/data/cars.json,./src/geely-partner-samara.ru/data/cars.json,./src/geely-partner-saratov.ru/data/cars.json,./src/geely-partner-vostok.ru/data/cars.json,./tmp/auto-team.pro/data/geely.json"

    - name: Scrape belgee.ru
      run: node .github/scripts/scrape.js
      env:
        BRAND: "belgee"
        URL: "https://belgee.ru"
        ITEM_XPATH: "//header/div[@data-id='models']/div"
        ID_XPATH: "concat('belgee-', substring-after(substring-after(./a/@href, '/model/'), 'belgee-'))"
        MODEL_XPATH: "./a/span[@class='title']/text()"
        PRICE_XPATH: "translate(string(./a/span[@class='subtitle']/text()), translate(string(./a/span[@class='subtitle']/text()), '0123456789', ''), '')"
        LINK_XPATH: "./a/@href"
        OUTPUT_PATHS: "./src/belgee-partner-samara.ru/data/cars.json,./src/belgee-partner-saratov.ru/data/cars.json,./src/belgee-samara.ru/data/cars.json,./tmp/auto-team.pro/data/belgee.json"

    - name: Scrape jaccar.ru
      run: node .github/scripts/scrape.js
      env:
        BRAND: "jac"
        URL: "https://jaccar.ru"
        ITEM_XPATH: "//li[contains(@class, 'menu-models__item')]"
        ID_XPATH: "concat('jac-', substring-before(substring-after(.//a[contains(@class, 'js-menu-models-link')]/@href, '/models/'), '/'))"
        MODEL_XPATH: ".//div[contains(@class, 'menu-models__item-title')]/text()"
        PRICE_XPATH: "translate(string(.//div[contains(@class, 'menu-models__item-price')]/text()), translate(string(.//div[contains(@class, 'menu-models__item-price')]/text()), '0123456789', ''), '')"
        LINK_XPATH: "./a[contains(@class, 'js-menu-models-link')]/@href"
        OUTPUT_PATHS: "./src/jac-samara.ru/data/cars.json"

    - name: Scrape dealer price jetour-alpha.ru
      run: node .github/scripts/getDealerData.js
      env:
        CSV_URL: ${{ secrets.CSV_ALPHA_KAIYI }}
        QUERY_STRING: "SELECT C, F, H WHERE A='Эксперт' and B='Jetour'"
        KEY_COLUMN: "Модель"
        OUTPUT_PATHS: "./src/jetour-alpha.ru/data/dealer_price.json"

    - name: Scrape jetour-ru.com
      run: node .github/scripts/scrape.js
      env:
        BRAND: "jetour"
        URL: "https://jetour-ru.com"
        ITEM_XPATH: "//li[contains(@class, 'menu-model-card')]"
        ID_XPATH: "concat('jetour-', substring-before(substring-after(.//div[contains(@class, 'td-submenu__body')]//a[starts-with(@href, '/models/')]/@href, '/models/'), '?'))"
        MODEL_XPATH: ".//div[@class='td-submenu__title']/text()"
        PRICE_XPATH: "translate(string(.//div[@class='td-submenu__description']/span[1]/span[1]/text()), translate(string(.//div[@class='td-submenu__description']/span[1]/span[1]/text()), '0123456789', ''), '')"
        LINK_XPATH: "substring-before(.//div[contains(@class, 'td-submenu__body')]//a[starts-with(@href, '/models/')]/@href, '?')"
        OUTPUT_PATHS: "./src/jetour-alpha.ru/data/cars.json,./src/jetour-krasnodar.ru/data/cars.json,./src/nika-jetour.ru/data/cars.json"
        DEALERPRICE: 'dealer_price.json'
        DEALERPRICEFIELD: 'Конечная цена'

    - name: Scrape dealer price livan-alpha.ru
      run: node .github/scripts/getDealerData.js
      env:
        CSV_URL: ${{ secrets.CSV_ALPHA_BAIC }}
        QUERY_STRING: "SELECT C, F, H WHERE A='Альфа' and B='Livan'"
        KEY_COLUMN: "Модель"
        OUTPUT_PATHS: "./src/livan-samara.ru/data/dealer_price.json"

    - name: Scrape livan-motors.ru
      run: node .github/scripts/scrape.js
      env:
        BRAND: "livan"
        URL: "https://livan-motors.ru/model/"
        ITEM_XPATH: "//img[starts-with(@src, 'https://livan-motors.ru/storage/model')]/parent::*"
        ID_XPATH: "concat('livan-', substring-before(substring-after(./a[contains(text(),'Подробнее')][starts-with(@href, 'https://livan-motors.ru/model/')]/@href, '/model/'), '/'))"
        MODEL_XPATH: "substring-after(./div[@class='text-xl leading-none mb-6']/text(),'LIVAN ')"
        PRICE_XPATH: "translate(string(./div[@class='text-sm mb-6']/text()), translate(string(./div[@class='text-sm mb-6']/text()), '0123456789', ''), '')"
        LINK_XPATH: "./a[contains(text(),'Подробнее')][starts-with(@href, 'https://livan-motors.ru/model/')]/@href"
        OUTPUT_PATHS: "./src/livan-samara.ru/data/cars.json,./src/livanorenburg.ru/data/cars.json"
        DEALERPRICE: 'dealer_price.json'
        DEALERPRICEFIELD: 'Конечная цена'


    - name: Scrape gacmotor.com.ru
      run: node .github/scripts/scrape.js
      env:
        BRAND: "gac"
        URL: "https://gacmotor.com.ru/models"
        ITEM_XPATH: "//div[@class='td-models-grid__item']"
        ID_XPATH: "concat('gac-', substring-after(.//a[starts-with(@href, '/models/')]/@href, '/models/'))"
        MODEL_XPATH: "substring-after(.//a[starts-with(@href, '/models/')]/@href, '/models/')"
        PRICE_XPATH: "translate(string(.//span[@class='price']/text()), translate(string(.//span[@class='price']/text()), '0123456789', ''), '')"
        LINK_XPATH: ".//a[starts-with(@href, '/models/')]/@href"
        OUTPUT_PATHS: "./src/gac-smr.ru/data/cars.json,./src/gac-orenburg.ru/data/cars.json,./tmp/auto-team.pro/data/gac.json"

    - name: Scrape changanauto.ru
      run: node .github/scripts/scrape.js
      env:
        BRAND: "changan"
        URL: "https://changanauto.ru/models/"
        ITEM_XPATH: "//a[contains(@class,'card_bg-hover')]"
        ID_XPATH: "concat('changan-', substring-before(substring-after(@href, '/models/'),'/'))"
        MODEL_XPATH: ".//span[contains(@class,'card__info-title')]/text()"
        PRICE_XPATH: "translate(string(.//span[contains(@class,'card__info-title')]/following-sibling::span[1]/text()), translate(string(.//span[contains(@class,'card__info-title')]/following-sibling::span[1]/text()), '0123456789', ''), '')"
        LINK_XPATH: "./@href"
        OUTPUT_PATHS: "./tmp/auto-team.pro/data/changan.json"

    - name: Merge JSON for auto-team.pro
      run: node .github/scripts/mergeJson.js
      env:
        INPUT_PATHS: "./tmp/auto-team.pro/data/belgee.json,./tmp/auto-team.pro/data/geely.json,./tmp/auto-team.pro/data/gac.json,./tmp/auto-team.pro/data/changan.json"
        OUTPUT_PATHS: "./src/auto-team.pro/data/cars.json"

    - name: Scrape dealer price alpha-kaiyi.ru
      run: node .github/scripts/getDealerData.js
      env:
        CSV_URL: ${{ secrets.CSV_ALPHA_KAIYI }}
        QUERY_STRING: "SELECT C, F, H WHERE A='Альфа' and B='Kaiyi'"
        KEY_COLUMN: "Модель"
        OUTPUT_PATHS: "./src/kaiyi-alpha.ru/data/dealer_price.json"


    - name: Scrape dealer price alpha-baic.ru
      run: node .github/scripts/getDealerData.js
      env:
        CSV_URL: ${{ secrets.CSV_ALPHA_BAIC }}
        QUERY_STRING: "SELECT C, F, H WHERE A='Альфа' and B='Baic'"
        KEY_COLUMN: "Модель"
        OUTPUT_PATHS: "./src/baic-alpha.ru/data/dealer_price.json"


    - name: Scrape kaiyi-auto.ru
      run: node .github/scripts/extractData.js
      env:
        BRAND: 'kaiyi'
        URL: 'https://kaiyi-auto.ru/models/'
        REGEXP: '\$\{JSON\.stringify\((\{"menuType":.*)\).replace\('
        DEALERPRICE: 'dealer_price.json'
        DEALERPRICEFIELD: 'Конечная цена'
        OUTPUT_PATHS: "./src/kaiyi-alpha.ru/data/cars.json,./src/kaiyi-krd.ru/data/cars.json,./src/kaiyi-samara.ru/data/cars.json"

    - name: Scrape baic-auto.ru
      run: node .github/scripts/extractData.js
      env:
        BRAND: 'baic'
        URL: 'https://baic-auto.ru/models/'
        REGEXP: '\$\{JSON\.stringify\((\{"menuType":.*)\).replace\('
        DEALERPRICE: 'dealer_price.json'
        DEALERPRICEFIELD: 'Конечная цена'
        OUTPUT_PATHS: "./src/baic-alpha.ru/data/cars.json,./src/baic-krasnodar.ru/data/cars.json,./src/baic-samara.ru/data/cars.json"

    - name: Check for changes
      id: check_changes
      run: |
        if git diff --exit-code; then
          echo 'check_changes true — git diff'
          echo "changes=true" >> $GITHUB_ENV
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "script_output=$(echo -n 'Update cars from website' | base64)" >> $GITHUB_OUTPUT
        elif git status -s; then
          echo 'check_changes true — git status'
          echo "changes=true" >> $GITHUB_ENV
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "script_output=$(echo -n 'Update cars from website' | base64)" >> $GITHUB_OUTPUT
        else
          echo 'check_changes else'
          echo "changes=false" >> $GITHUB_ENV
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "script_output=$(echo -n '' | base64)" >> $GITHUB_OUTPUT
        fi
      continue-on-error: true

    - name: Commit files
      if: env.changes == 'true'
      run: |
          git config --local user.email "support+actions@github.com"
          git config --local user.name "github-actions-bot"
          if [[ $(find ./src -type f -name "*.json") ]]; then git add $(find ./src -type f -name "*.json"); fi
          git commit -m "Update cars from website" -a || echo "No changes to commit"
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin $GITHUB_REF_NAME
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    outputs:
      changes: ${{ steps.check_changes.outputs.changes }}
      script_output: ${{ steps.check_changes.outputs.script_output }}
  
  
  notify_telegram:
    needs: scrape
    if: ${{ needs.scrape.outputs.script_output != '' }}
    uses: ./.github/workflows/github-telegram.yml
    with:
      additional-text: |
        ${{ needs.scrape.outputs.script_output }}
    secrets:
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
