name: Scrape Data

on:
  schedule:
    - cron: '0 1 * * *'  # Запускается в 1 по Гринвичу
  push:
    paths:
      - '.github/scripts/extractData.js'
      - '.github/scripts/getDealerData.js'
      - '.github/scripts/mergeJson.js'
      - '.github/scripts/scrape.js'
      - '.github/scripts/scrape.py'
      - '.github/workflows/scrape.yml'
  workflow_dispatch:  # Позволяет вручную запускать этот workflow

jobs:
  scrape_all:
    runs-on: ubuntu-latest

    # Указываете окружение и его переменные
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
            npm install -g pnpm
            pnpm install --no-frozen-lockfile

      - name: Run Geely scraper
        run: pnpm run scrape-geely

      - name: Scrape dealer price belgee-samara.ru
        run: pnpm run get-belgee-samara
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape belgee.ru
        run: pnpm run scrape-belgee

      - name: Scrape dealer price jac-samara.ru
        run: pnpm run get-jac-samara
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape jaccar.ru
        run: pnpm run scrape-jac

      - name: Scrape dealer price jetour-alpha.ru
        run: pnpm run get-jetour-alpha
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape jetour-ru.com
        run: pnpm run scrape-jetour

      - name: Scrape dealer price livan-alpha.ru
        run: pnpm run get-livan-alpha
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape livan-motors.ru
        run: pnpm run scrape-livan

      - name: Scrape gac.ru
        run: pnpm run scrape-gac

      - name: Scrape changanauto.ru
        run: pnpm run scrape-changan

      - name: Scrape dealer price for kaiyi-alpha.ru
        run: pnpm run get-kaiyi-alpha
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape dealer price for kaiyi-samara.ru
        run: pnpm run get-kaiyi-samara
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape kaiyi-auto.ru
        run: pnpm run extract-kaiyi

      - name: Scrape dealer price для baic-alpha.ru
        run: pnpm run get-baic-alpha
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape dealer price для baic-samara.ru
        run: pnpm run get-baic-samara
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Extract BAIC data
        run: pnpm run extract-baic

      - name: Merge JSON for auto-team.pro
        run: pnpm run mergeJson

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --exit-code; then
            echo 'check_changes true — git diff'
            echo "changes=true" >> $GITHUB_ENV
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "script_output=$(echo -n 'Update cars from website' | base64)" >> $GITHUB_OUTPUT
          elif git status -s; then
            echo 'check_changes true — git status'
            echo "changes=true" >> $GITHUB_ENV
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "script_output=$(echo -n 'Update cars from website' | base64)" >> $GITHUB_OUTPUT
          else
            echo 'check_changes else'
            echo "changes=false" >> $GITHUB_ENV
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "script_output=$(echo -n '' | base64)" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Commit files
        if: env.changes == 'true'
        run: |
            git config --local user.email "support+actions@github.com"
            git config --local user.name "github-actions-bot"
            if [[ $(find ./src -type f -name "*.json") ]]; then git add $(find ./src -type f -name "*.json"); fi
            git commit -m "Update all cars data" -a || echo "No changes to commit"
            git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
            git push origin $GITHUB_REF_NAME
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    outputs:
      changes: ${{ steps.check_changes.outputs.changes }}
      script_output: ${{ steps.check_changes.outputs.script_output }}
  
  notify_telegram:
    needs: scrape_all
    if: ${{ needs.scrape_all.outputs.script_output != '' }}
    uses: ./.github/workflows/github-telegram.yml
    with:
      additional-text: |
        ${{ needs.scrape_all.outputs.script_output }}
    secrets:
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
