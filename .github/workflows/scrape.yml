name: Scrape Data

on:
  schedule:
    - cron: '0 */4 * * *'  # Запускается в 1 по Гринвичу
  push:
    paths:
      - '.github/scripts/extractData.js'
      - '.github/scripts/getDealerData.js'
      - '.github/scripts/mergeJson.js'
      - '.github/scripts/scrape.js'
      - '.github/scripts/scrape.py'
      - '.github/workflows/scrape.yml'
  workflow_dispatch:
    inputs:
      brand:
        description: 'Select brand to scrape'
        type: choice
        required: true
        options:
          - all
          - geely
          - belgee
          - jac
          - jetour
          - livan
          - gac
          - changan
          - kaiyi
          - baic
      commit_changes:
        description: 'Commit changes to repository'
        type: boolean
        required: true
        default: true
      send_notification:
        description: 'Send Telegram notification'
        type: boolean
        required: true
        default: true

jobs:
  scrape_all:
    runs-on: ubuntu-latest

    # Указываете окружение и его переменные
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
            npm install -g pnpm
            pnpm install --no-frozen-lockfile

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: "x64"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests lxml pyyaml Pillow

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Set Chrome path
        run: echo "CHROME_BIN=$(which google-chrome)" >> $GITHUB_ENV

      # Определяем, какой бренд запускать
      - name: Set brand to scrape
        id: set_brand
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "brand=${{ github.event.inputs.brand }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            # Определяем бренд по измененным файлам из github.event.path
            if [[ "${{ github.event.path }}" == *"geely"* ]]; then
              echo "brand=geely" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.path }}" == *"belgee"* ]]; then
              echo "brand=belgee" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.path }}" == *"jac"* ]]; then
              echo "brand=jac" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.path }}" == *"jetour"* ]]; then
              echo "brand=jetour" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.path }}" == *"livan"* ]]; then
              echo "brand=livan" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.path }}" == *"gac"* ]]; then
              echo "brand=gac" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.path }}" == *"changan"* ]]; then
              echo "brand=changan" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.path }}" == *"kaiyi"* ]]; then
              echo "brand=kaiyi" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.path }}" == *"baic"* ]]; then
              echo "brand=baic" >> $GITHUB_OUTPUT
            else
              echo "brand=all" >> $GITHUB_OUTPUT
            fi
          else
            echo "brand=all" >> $GITHUB_OUTPUT
          fi

      - name: Run Geely scraper
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'geely' }}
        run: pnpm run scrape-geely

      - name: Scrape dealer price belgee-samara.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'belgee' }}
        run: pnpm run get-belgee-samara
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape belgee.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'belgee' }}
        run: pnpm run scrape-belgee

      - name: Scrape dealer price jac-samara.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'jac' }}
        run: pnpm run get-jac-samara
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape jaccar.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'jac' }}
        run: pnpm run scrape-jac

      - name: Scrape dealer price jetour-alpha.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'jetour' }}
        run: pnpm run get-jetour-alpha
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape dealer price jetour-krasnodar.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'jetour' }}
        run: pnpm run get-jetour-krasnodar
        env:
          CSV_URL: ${{ secrets.CSV_AUTOHOLDING }}

      - name: Scrape jetour-ru.com
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'jetour' }}
        run: pnpm run scrape-jetour

      - name: Scrape dealer price livan-alpha.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'livan' }}
        run: pnpm run get-livan-alpha
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape livan-motors.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'livan' }}
        run: pnpm run scrape-livan

      - name: Scrape gac.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'gac' }}
        run: pnpm run scrape-gac

      - name: Scrape changanauto.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'changan' }}
        run: pnpm run scrape-changan

      - name: Scrape dealer price for kaiyi-alpha.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'kaiyi' }}
        run: pnpm run get-kaiyi-alpha
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape dealer price for kaiyi-samara.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'kaiyi' }}
        run: pnpm run get-kaiyi-samara
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape dealer price for kaiyi-krd.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'kaiyi' }}
        run: pnpm run get-kaiyi-krd
        env:
          CSV_URL: ${{ secrets.CSV_AUTOHOLDING }}

      - name: Scrape kaiyi-auto.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'kaiyi' }}
        run: pnpm run extract-kaiyi

      - name: Scrape dealer price для baic-alpha.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'baic' }}
        run: pnpm run get-baic-alpha
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape dealer price для baic-samara.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'baic' }}
        run: pnpm run get-baic-samara
        env:
          CSV_URL: ${{ secrets.CSV_ALPHA }}

      - name: Scrape dealer price для baic-krasnodar.ru
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'baic' }}
        run: pnpm run get-baic-krasnodar
        env:
          CSV_URL: ${{ secrets.CSV_AUTOHOLDING }}

      - name: Extract BAIC data
        if: ${{ steps.set_brand.outputs.brand == 'all' || steps.set_brand.outputs.brand == 'baic' }}
        run: pnpm run extract-baic

      - name: Merge JSON for auto-team.pro
        if: ${{ steps.set_brand.outputs.brand == 'all' }}
        run: pnpm run mergeJson

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --exit-code; then
            echo "changes=true" >> $GITHUB_ENV
            echo "changes=true" >> $GITHUB_OUTPUT
            BRAND_NAME="${{ steps.set_brand.outputs.brand }}"
            if [[ "$BRAND_NAME" == "all" ]]; then
              echo -n "<blockquote>Updated all brands data</blockquote>" > output_wrapped.txt
            else
              echo -n "<blockquote>Updated $BRAND_NAME data</blockquote>" > output_wrapped.txt
            fi
          elif git status -s; then
            echo "changes=true" >> $GITHUB_ENV
            echo "changes=true" >> $GITHUB_OUTPUT
            BRAND_NAME="${{ steps.set_brand.outputs.brand }}"
            if [[ "$BRAND_NAME" == "all" ]]; then
              echo -n "<blockquote>Updated all brands data</blockquote>" > output_wrapped.txt
            else
              echo -n "<blockquote>Updated $BRAND_NAME data</blockquote>" > output_wrapped.txt
            fi
          else
            echo "changes=false" >> $GITHUB_ENV
            echo "changes=false" >> $GITHUB_OUTPUT
            echo -n "<blockquote>Nothing changes</blockquote>" > output_wrapped.txt
          fi
          if [ -s output.txt ]; then
            echo "<br><pre>$(cat output.txt)</pre>" > output_wrapped.txt
          fi
          # Кодируем содержимое файла в base64
          encoded_output=$(base64 -w 0 output_wrapped.txt)
          # Передаем закодированное значение
          echo "script_output=$encoded_output" >> $GITHUB_OUTPUT
        continue-on-error: true
      
      - name: Commit files
        if: |
          env.changes == 'true' && 
          (github.event_name == 'push' || github.event_name == 'schedule' || github.event.inputs.commit_changes == 'true')
        run: |
            git config --local user.email "support+actions@github.com"
            git config --local user.name "github-actions-bot"
            if [[ $(find ./src -type f -name "*.json") ]]; then git add $(find ./src -type f -name "*.json"); fi
            git commit -m "Update all cars data" -a || echo "No changes to commit"
            git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
            git push origin $GITHUB_REF_NAME
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    outputs:
      changes: ${{ steps.check_changes.outputs.changes }}
      script_output: ${{ steps.check_changes.outputs.script_output }}
  
  notify_telegram:
    needs: scrape_all
    if: |
      needs.scrape_all.outputs.script_output != '' && 
      (github.event_name == 'push' || github.event_name == 'schedule' || github.event.inputs.send_notification == 'true')
    uses: ./.github/workflows/github-telegram.yml
    with:
      additional-text: |
        ${{ needs.scrape_all.outputs.script_output }}
    secrets:
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
