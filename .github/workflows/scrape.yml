name: Scrape Data

on:
  schedule:
    - cron: '0 1 * * *'  # Запускается в 1 по Гринвичу
  push:
    paths:
      - '.github/scripts/extractData.js'
      - '.github/scripts/getDealerData.js'
      - '.github/scripts/mergeJson.js'
      - '.github/scripts/scrape.js'
      - '.github/scripts/scrape.py'
      - '.github/workflows/scrape.yml'
  workflow_dispatch:  # Позволяет вручную запускать этот workflow

jobs:
  scrape_all:
    runs-on: ubuntu-latest

    # Указываете окружение и его переменные
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
            npm install -g pnpm
            pnpm install --no-frozen-lockfile

      - name: Run Geely Workflow
        uses: ./.github/workflows/scrape-geely.yml
        id: geely

      - name: Run Belgee Workflow
        uses: ./.github/workflows/scrape-belgee.yml
        id: belgee

      - name: Run Jac Workflow
        uses: ./.github/workflows/scrape-jac.yml
        id: jac

      - name: Run Jetour Workflow
        uses: ./.github/workflows/scrape-jetour.yml
        id: jetour

      - name: Run Livan Workflow
        uses: ./.github/workflows/scrape-livan.yml
        id: livan

      - name: Run Gac Workflow
        uses: ./.github/workflows/scrape-gac.yml
        id: gac

      - name: Run Changan Workflow
        uses: ./.github/workflows/scrape-changan.yml
        id: changan

      - name: Run Kaiyi Workflow
        uses: ./.github/workflows/scrape-kaiyi.yml
        id: kaiyi

      - name: Run Baic Workflow
        uses: ./.github/workflows/scrape-baic.yml
        id: baic

      - name: Merge JSON for auto-team.pro
        run: node .github/scripts/mergeJson.js
        env:
          INPUT_PATHS: "./tmp/auto-team.pro/data/belgee.json,./tmp/auto-team.pro/data/geely.json,./tmp/auto-team.pro/data/gac.json,./tmp/auto-team.pro/data/changan.json"
          OUTPUT_PATHS: "./src/auto-team.pro/data/cars.json"

      - name: Check for changes
        id: check_changes
        run: |
          if [[ "${{ steps.geely.outputs.changes }}" == "true" ]] || \
             [[ "${{ steps.belgee.outputs.changes }}" == "true" ]] || \
             [[ "${{ steps.jac.outputs.changes }}" == "true" ]] || \
             [[ "${{ steps.jetour.outputs.changes }}" == "true" ]] || \
             [[ "${{ steps.livan.outputs.changes }}" == "true" ]] || \
             [[ "${{ steps.gac.outputs.changes }}" == "true" ]] || \
             [[ "${{ steps.changan.outputs.changes }}" == "true" ]] || \
             [[ "${{ steps.kaiyi.outputs.changes }}" == "true" ]] || \
             [[ "${{ steps.baic.outputs.changes }}" == "true" ]] || \
             git diff --exit-code || git status -s; then
            echo 'check_changes true'
            echo "changes=true" >> $GITHUB_ENV
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "script_output=$(echo -n 'Update all cars data' | base64)" >> $GITHUB_OUTPUT
          else
            echo 'check_changes else'
            echo "changes=false" >> $GITHUB_ENV
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "script_output=$(echo -n '' | base64)" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Commit files
        if: env.changes == 'true'
        run: |
            git config --local user.email "support+actions@github.com"
            git config --local user.name "github-actions-bot"
            if [[ $(find ./src -type f -name "*.json") ]]; then git add $(find ./src -type f -name "*.json"); fi
            git commit -m "Update all cars data" -a || echo "No changes to commit"
            git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
            git push origin $GITHUB_REF_NAME
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    outputs:
      changes: ${{ steps.check_changes.outputs.changes }}
      script_output: ${{ steps.check_changes.outputs.script_output }}
  
  notify_telegram:
    needs: scrape_all
    if: ${{ needs.scrape_all.outputs.script_output != '' }}
    uses: ./.github/workflows/github-telegram.yml
    with:
      additional-text: |
        ${{ needs.scrape_all.outputs.script_output }}
    secrets:
      TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
